{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/vue-router/dist/vue-router.esm.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/babel-runtime/core-js/get-iterator.js","webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/@firebase/app/dist/index.cjs.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/@firebase/util/dist/index.cjs.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js"],"names":["module","exports","__webpack_require__","Object","defineProperty","get","a","aFunction","fn","that","length","undefined","call","b","c","apply","arguments","global","hide","Iterators","TO_STRING_TAG","DOMIterables","split","i","NAME","Collection","proto","prototype","Array","emptyObject","freeze","isUndef","v","isDef","isTrue","isPrimitive","value","isObject","obj","_toString","toString","isPlainObject","isRegExp","isValidArrayIndex","val","n","parseFloat","String","Math","floor","isFinite","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","create","list","toLowerCase","isReservedAttribute","remove","arr","item","index","indexOf","splice","hasOwnProperty","hasOwn","key","cached","cache","camelizeRE","camelize","replace","_","toUpperCase","capitalize","charAt","slice","hyphenateRE","hyphenate","bind","Function","ctx","boundFn","l","_length","toArray","start","ret","extend","to","_from","toObject","res","noop","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","e","keysA","keys","keysB","looseIndexOf","once","called","this","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","charCodeAt","def","enumerable","writable","configurable","bailRE","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","test","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","set","has","add","clear","warn","uid","Dep","id","subs","addSub","sub","push","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","_target","popTarget","pop","VNode","tag","data","children","text","elm","context","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","parent","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","forEach","method","original","args","len","inserted","result","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","protoAugment","copyAugment","walk","src","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","mergeAssets","hook","type","key$1","props","methods","inject","computed","provide","defaultStrat","mergeOptions","options","normalizeProps","normalized","normalizeInject","dirs","directives","normalizeDirectives","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","default","$options","_props","getType","getPropDefaultValue","prevShouldObserve","match","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","pending","flushCallbacks","copies","useMacroTask","setImmediate","MessageChannel","setTimeout","channel","port","port2","port1","onmessage","postMessage","Promise","p","resolve","then","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","name","passive","once$$1","capture","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","hash","altKey","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","last","isTextNode","shift","_isVList","ensureCtor","comp","base","__esModule","toStringTag","getFirstComponentChild","$once","$on","remove$1","$off","updateComponentListeners","listeners","oldListeners","resolveSlots","slots","attrs","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","isInInactiveTree","_inactive","activateChildComponent","direct","_directInactive","$children","callHook","handlers","j","_hasHookEvent","$emit","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","_watcher","_isMounted","callUpdatedHooks","emit","uid$1","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","sync","active","dirty","deps","newDeps","depIds","newDepIds","expression","path","segments","parsePath","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","teardown","_isBeingDestroyed","sharedPropertyDefinition","proxy","sourceKey","initState","propsOptions","_propKeys","loop","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","handler","createWatcher","initWatch","shouldCache","createComputedGetter","$watch","resolveInject","filter","provideKey","source","_provided","provideDefault","renderList","render","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$scopedSlots","slotNodes","$slots","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","scopedSlots","_scopeId","_c","d","createElement","cloneAndMarkFunctionalResult","clone","mergeProps","componentVNodeHooks","init","hydrating","parentElm","refElm","_isDestroyed","keepAlive","mountedNode","prepatch","_isComponent","_parentVnode","_parentElm","_refElm","inlineTemplate","createComponentInstanceForVnode","$mount","oldVnode","parentVnode","renderChildren","hasChildren","_renderChildren","$vnode","_vnode","$attrs","$listeners","propKeys","_parentListeners","$forceUpdate","updateChildComponent","insert","destroy","deactivateChildComponent","$destroy","hooksToMerge","createComponent","baseCtor","_base","cid","factory","errorComp","resolved","loading","loadingComp","contexts","forceRender","reject","reason","component","delay","timeout","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","callback","transformModel","extractPropsFromVNodeData","functional","renderContext","vnodes","createFunctionalComponent","nativeOn","abstract","installComponentHooks","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","applyNS","force","style","class","registerDeepBindings","_createElement","uid$3","super","superOptions","modifiedOptions","modified","latest","extended","extendOptions","sealed","sealedOptions","dedupe","resolveModifiedOptions","components","Vue","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","constructor","Comp","initProps$1","initComputed$1","mixin","use","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","el","initMixin","dataDef","propsDef","$set","$delete","immediate","stateMixin","hookRE","cbs","i$1","eventsMixin","_update","prevEl","$el","prevVnode","prevActiveInstance","__patch__","__vue__","lifecycleMixin","$nextTick","_render","ref","renderMixin","patternTypes","RegExp","builtInComponents","KeepAlive","include","exclude","Number","created","destroyed","mounted","this$1","parseInt","configDef","util","delete","plugin","installedPlugins","_installedPlugins","unshift","install","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","version","acceptValue","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","nodeOps","tagName","document","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","removeAttribute","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","add$1","_withTask","onceHandler","remove$2","createOnceHandler","updateDOMListeners","change","normalizeEvents","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","notInFocus","activeElement","isNotInFocusAndDirty","_vModifiers","number","trim","isDirtyWithModifiers","parseStyleText","cssText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","end","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","modules","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","pre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","createPatchFunction","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","hasNoMatchingOption","actuallySetSelected","isMultiple","selected","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","h","rawChild","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","cloneNode","attr","HTMLUnknownElement","HTMLElement","mountComponent","querySelector","query","__webpack_exports__","condition","message","isError","View","routerView","route","$route","_routerViewCache","depth","inactive","_routerRoot","routerViewDepth","matched","registerRouteInstance","instances","propsToPass","resolveProps","encodeReserveRE","encodeReserveReplacer","commaRE","encode","encodeURIComponent","decode","decodeURIComponent","parseQuery","param","parts","stringifyQuery","val2","x","trailingSlashRE","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","meta","fullPath","getFullPath","formatMatch","START","_stringifyQuery","isSameRoute","isObjectEqual","aKeys","bKeys","aVal","bVal","_Vue","toTypes","eventTypes","Link","required","exact","append","exactActiveClass","$router","href","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","queryIncludes","isIncludedRoute","guardEvent","click","findAnchor","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","installed","registerInstance","callVal","beforeCreate","_router","history","_route","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","firstChar","stack","segment","cleanPath","isarray","pathToRegexp_1","pathToRegexp","parse_1","parse","compile_1","tokensToFunction","tokensToFunction_1","tokensToRegExp_1","tokensToRegExp","PATH_REGEXP","tokens","defaultDelimiter","delimiter","exec","m","escaped","offset","next","prefix","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","pretty","token","TypeError","attachKeys","re","flags","sensitive","strict","endsWithDelimiter","groups","regexpToRegexp","arrayToRegexp","stringToRegexp","compile","regexpCompileCache","fillParams","routeMsg","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","alias","aliases","aliasRoute","normalizeLocation","_normalized","assign","rawPath","parsedPath","hashIndex","queryIndex","basePath","extraQuery","_parseQuery","parsedQuery","resolveQuery","createMatcher","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedMatch","aliasedRecord","addRoutes","positionStore","setupScroll","replaceState","getStateKey","saveScrollPosition","state","_key","handleScroll","isPop","app","behavior","scrollBehavior","position","getScrollPosition","shouldScroll","scrollToPosition","catch","pageXOffset","y","pageYOffset","isValidPosition","isNumber","normalizePosition","selector","docRect","documentElement","elRect","getElementPosition","scrollTo","ua","supportsPushState","Time","now","Date","genKey","toFixed","pushState","url","runQueue","step","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","msg","Error","flatten","History","baseEl","normalizeBase","ready","readyCbs","readyErrorCbs","errorCbs","extractGuards","records","reverse","guards","instance","guard","extractGuard","bindGuard","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","activated","deactivated","resolveQueue","extractLeaveGuards","beforeHooks","extractUpdateHooks","iterator","postEnterCbs","isValid","poll","bindEnterGuard","extractEnterGuards","resolveHooks","prev","afterHooks","HTML5History","History$$1","expectScroll","initLocation","getLocation","go","fromRoute","getCurrentLocation","pathname","search","HashHistory","checkFallback","ensureSlash","setupListeners","supportsScroll","getHash","replaceHash","pushHash","getUrl","AbstractHistory","targetIndex","VueRouter","apps","matcher","registerHook","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","createHref","normalizedTo","px","random","classof","ITERATOR","getIteratorMethod","it","self","__g","descriptor","setToStringTag","IteratorPrototype","Constructor","$keys","g","eval","done","core","__e","toIObject","arrayIndexOf","IE_PROTO","object","names","O","cof","propertyIsEnumerable","S","valueOf","contains","DEFAULT_ENTRY_NAME","tokenListeners","FirebaseAppImpl","firebase_","isDeleted_","services_","name_","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","options_","deepCopy","INTERNAL","getUid","getToken","addAuthTokenListener","removeAuthTokenListener","listener","checkDestroyed_","_this","removeApp","services","serviceKey","instanceKey","all","service","_getService","instanceIdentifier","instanceSpecifier","factories","extendApp","deepExtend","code","appErrors","log","ErrorFactory","no-app","bad-app-name","duplicate-app","app-deleted","duplicate-service","sa-not-supported","invalid-app-argument","firebase","createFirebaseNamespace","apps_","appHooks","initializeApp","rawConfig","name_1","callAppHooks","SDK_VERSION","registerService","createService","serviceProperties","appHook","allowMultipleInstances","getApps","serviceNamespace","appArg","extendNamespace","createSubscribe","useAsService","eventName","serviceName","factoryName","useService","patchProperty","tslib_1","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assert","assertion","assertionError","stringToByteArray","out","base64","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","opt_webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","c1","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","base64Decode","getTime","Deferred","promise","wrapCallback","getUA","ERROR_NAME","captureStackTrace","FirebaseError","errors","template","fullCode","jsonEval","header","claims","signature","objTo","objFrom","findKey","opt_this","Sha1","_super","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","__extends","compress_","buf","opt_offset","W","t","f","k","opt_length","lengthMinusBlock","inbuf","digest","totalBits","ObserverProxy","executor","onNoObservers","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","close","complete","subscribe","nextOrObserver","methods_1","implementsAnyMethods","unsub","unsubscribeOne","finalError","sendOne","errorPrefix","fnName","argumentNumber","argName","base64Encode","utf8Bytes","isMobileCordova","isNodeSdk","isReactNative","patchCapture","captureFake","isAdmin","issuedAtTime","isValidFormat","decoded","isValidTimestamp","validSince","validUntil","findValue","getAnyKey","getCount","rv","getValues","isEmpty","isNonNullObject","opt_obj","safeGet","querystring","querystringParams","arrayVal","querystringDecode","async","validateArgCount","minCount","maxCount","argCount","argError","validateCallback","validateContextObject","validateNamespace","stringLength","high","ObjectProto","getPrototypeOf","toInteger","min","TAG","ARG","T","B","tryGet","callee","__","extendStatics","getOwnPropertySymbols","decorators","desc","r","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","fulfilled","rejected","label","sent","trys","ops","verb","throw","return","op","ar","__read","asyncIterator","q","resume","__await","fulfill","settle","__values","cooked","mod","setPrototypeOf","__assign","IObject","defined","ceil","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","_injectStyles","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","array","title","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","bitmap","anObject","dPs","enumBugKeys","Empty","createDict","iframeDocument","iframe","contentWindow","open","write","lt","F","Properties","shared","store","USE_SYMBOL","stat","copyright","IE8_DOM_DEFINE","toPrimitive","dP","Attributes","LogLevel","defaultLogLevel","INFO","defaultLogHandler","logType","logLevel","toISOString","DEBUG","VERBOSE","WARN","ERROR","Logger","_logLevel","_logHandler","debug","setLogLevel","level","inst","getIterator","iterFn","TO_STRING","createDesc","ex","logger","DOMStorageWrapper","domStorage_","prefix_","removeItem","prefixedName_","setItem","storedVal","getItem","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","domStorage","PersistentStorage","SessionStorage","logClient","LUIDGenerator","sha1","sha1Bytes","buildLogMessage_","var_args","logger$1","firstLog_","enableLogging","logger_","persistent","logWrapper","fatal","isInvalidJSONNumber","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","ObjectToUniqueKey","splitStringBySize","segsize","dataSegs","substring","each","doubleToIEEE754String","ln","bits","Infinity","abs","pow","LN2","round","hexByteString","hexByte","INTEGER_REGEXP_","intVal","exceptionGuard","beingCrawled","setTimeoutNonBlocking","time","Path","pathOrString","pieceNum","pieces_","copyTo","pieceNum_","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","begin","pieces","childPathObj","childPieces","relativePath","outerPath","innerPath","outer","inner","comparePaths","right","leftKeys","rightKeys","cmp","equals","other","ValidationPath","errorPrefix_","parts_","byteLength_","checkValid_","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","LONG_POLLING","RepoInfo","host","secure","webSocketOnly","persistenceKey","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","connURL","pairs","toURLString","PUSH_CHARS","lastPushTime","lastRandChars","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseURL","subdomain","protocol","scheme","repoInfo","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodePath","queryParams","queryString","results","startsWith","_a","kv","decodeQuery","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","isValidKey","isValidPathString","isValidPriority","priority","validateFirebaseDataArg","validateFirebaseData","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergeDataArg","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateWritablePath","validateUrl","isValidRootPathString","OnDisconnect","repo_","cancel","deferred","onDisconnectCancel","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","duplicateTime","timeStampChars","NamedNode","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","action","exportFormat",".value",".priority","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","_defaultIndexMap","PRIORITY_INDEX","PriorityIndex","aPriority","bPriority","indexCmp","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newImmediateChild","numKeys","allIntegerKeys","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","MAX","setMaxNode$1","USE_HINZE","nodeFromJSON$1","json","node_1","jsonObj_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj_1","childSet","sortedChildSet","setNodeFromJSON","__referenceConstructor","OperationType","VALUE_INDEX","ValueIndex","valueNode","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","getQueryParams","getIndex","snapshotNode","eventData","cancelCB_1","cb_1","createCancelEvent","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherCount","otherKey","thisKey","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","getIndexStartName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","cancelCallbackOrContext","getCancelAndContextArgs_","onValueEvent","onChildEvent","cancelCallback","container","addEventCallbackForQuery","removeEventCallbackForQuery","userCallback","cancelOrContext","firstCall","onceCallback","limitToFirst","limit","limitToLast","orderByChild","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","CountedSet","SparseSnapshotTree","find","childKey","remember","forget","self_1","forEachTree","prefixPath","func","resolveDeferredValue","serverValues","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","trackChildChange","updateFullNode","newSnap","newPriority","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap_","oldChange","oldType","getChanges","NO_COMPLETE_CHILD_SOURCE","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","moves","generateEventsForType_","registrations","filteredChanges","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","generateEventsForChanges_","getInitialEvents","initialChanges","SyncPoint","views_","optCompleteServerCache","view","events_1","serverCacheComplete","eventCacheComplete","hadCompleteView","hasCompleteView","viewQueryId","getQueryViews","viewForQuery","getCompleteView","viewExistsForQuery","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite_","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap_","queryToTagMap_","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","queryKey","queryKeyForTag_","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","stopListening","queryToRemove","tagToRemove","removeTags_","maybeChildSyncPoint","childMap","views_1","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","error$$1","errorForServerCode","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","forceRefresh","addTokenChangeListener","removeTokenChangeListener","notifyForInvalidToken","errorMessage","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","readyState","called_1","wrappedFn_1","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","command","arg1","arg2","incrementIncomingBytes_","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","Windows","UI","markConnectionHealthy","shutdown_","myDisconnFrame","send","dataStr","base64data","MAX_URL_DATA_SIZE","enqueueSegment","pw","dframe","commandCB","onMessageCB","outstandingRequests","pendingSegs","currentSerial","myIFrame","createIFrame_","script","iframeContents","doc","contentDocument","alive","myID","disconn","myPW","theURL","nodeRestRequest","newRequest_","curDataString","theSeg","seg","ts","addLongPollTag_","segnum","totalsegs","serial","doNewRequest","keepaliveTimeout","loadCB","doNodeLongPoll","newScript_1","onload","onreadystatechange","rstate","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","headers","User-Agent","NODE_ENV","origin","mySock","onopen","onclose","handleIncomingFrame","isOldAndroid","oldAndroidMatch","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports_1","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeout_ms","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens_","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","token_1","authMethod","requestData","cred","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","accessToken","interrupt","serverTimeOffset","normalizedPathString","statusCode","explanation","clientName","ReadonlyRestClient","getListenId_","listenId","thisListen","queryStringParamaters","toRestQueryStringParameters","restRequest_","queryStringParameters","authTokenData","authToken","xhr","XMLHttpRequest","responseText","Repo","forceRestClient","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactions_init_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","generateServerValues","values","isMerge","taggedChildren","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedTree","resolveDeferredValueTree","showDelta","longestName","reduce","previousValue","currentValue","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","startName","endName","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","inRange","oldChildSnap","compareNext","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","validateRootPathString","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","bool","validateBoolean","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","valueCallback","watchRef","order","retryCount","unwatcher","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","buildTransactionQueue_","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","abortTransaction","currentNode","newDataNode","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","abortTransactionsOnNode_","lastSent","_staticInstance","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","createRepo","deleteRepo","appRepos","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP",".sv","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","ConnectionTarget","TEST_ACCESS","hijackHash","newHash","oldPut","opt_onComplete","opt_hash","listens","firebaseRef","registerDatabase","unused","$export","own","IS_FORCED","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","expProto","C","virtual","R","U","getKeys","fails","KEY","exp","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","LIBRARY","redefine","$iterCreate","BUGGY","returnThis","Base","IS_SET","FORCED","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","addToUnscopables","iterated","Arguments","$at","point"],"mappings":"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","file":"static/js/vendor.5ae777ea92b6114fe5ac.js","sourcesContent":["// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_descriptors.js\n// module id = +E39\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ctx.js\n// module id = +ZMJ\n// module chunks = 0","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/web.dom.iterable.js\n// module id = +tPU\n// module chunks = 0","/*!\n * Vue.js v2.5.16\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.16';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.runtime.esm.js\n// module id = /5sW\n// module chunks = 0","module.exports = {};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iterators.js\n// module id = /bQp\n// module chunks = 0","/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-router/dist/vue-router.esm.js\n// module id = /ocq\n// module chunks = 0","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_uid.js\n// module id = 3Eo+\n// module chunks = 0","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator-method.js\n// module id = 3fs2\n// module chunks = 0","module.exports = function () { /* empty */ };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_add-to-unscopables.js\n// module id = 4mcu\n// module chunks = 0","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_defined.js\n// module id = 52gC\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_an-object.js\n// module id = 77Pl\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_global.js\n// module id = 7KvD\n// module chunks = 0","module.exports = require('./_hide');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_redefine.js\n// module id = 880/\n// module chunks = 0","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-create.js\n// module id = 94VQ\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/get-iterator.js\n// module id = BO1k\n// module chunks = 0","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.keys.js\n// module id = Cdx3\n// module chunks = 0","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_has.js\n// module id = D2L2\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-step.js\n// module id = EGZi\n// module chunks = 0","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_is-object.js\n// module id = EqjI\n// module chunks = 0","var core = module.exports = { version: '2.5.6' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_core.js\n// module id = FeBl\n// module chunks = 0","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys-internal.js\n// module id = Ibhu\n// module chunks = 0","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iobject.js\n// module id = MU5D\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-primitive.js\n// module id = MmMw\n// module chunks = 0","module.exports = true;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_library.js\n// module id = O4g8\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar util = require('@firebase/util');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\n// An array to capture listeners before the true auth functions\r\n// exist\r\nvar tokenListeners = [];\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n */\r\nvar FirebaseAppImpl = /** @class */ (function () {\r\n    function FirebaseAppImpl(options, config, firebase_) {\r\n        this.firebase_ = firebase_;\r\n        this.isDeleted_ = false;\r\n        this.services_ = {};\r\n        this.name_ = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled || false;\r\n        this.options_ = util.deepCopy(options);\r\n        this.INTERNAL = {\r\n            getUid: function () { return null; },\r\n            getToken: function () { return Promise.resolve(null); },\r\n            addAuthTokenListener: function (callback) {\r\n                tokenListeners.push(callback);\r\n                // Make sure callback is called, asynchronously, in the absence of the auth module\r\n                setTimeout(function () { return callback(null); }, 0);\r\n            },\r\n            removeAuthTokenListener: function (callback) {\r\n                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });\r\n            }\r\n        };\r\n    }\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"automaticDataCollectionEnabled\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this._automaticDataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            this.checkDestroyed_();\r\n            this._automaticDataCollectionEnabled = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"name\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.name_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseAppImpl.prototype, \"options\", {\r\n        get: function () {\r\n            this.checkDestroyed_();\r\n            return this.options_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FirebaseAppImpl.prototype.delete = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            _this.checkDestroyed_();\r\n            resolve();\r\n        })\r\n            .then(function () {\r\n            _this.firebase_.INTERNAL.removeApp(_this.name_);\r\n            var services = [];\r\n            Object.keys(_this.services_).forEach(function (serviceKey) {\r\n                Object.keys(_this.services_[serviceKey]).forEach(function (instanceKey) {\r\n                    services.push(_this.services_[serviceKey][instanceKey]);\r\n                });\r\n            });\r\n            return Promise.all(services.map(function (service) {\r\n                return service.INTERNAL.delete();\r\n            }));\r\n        })\r\n            .then(function () {\r\n            _this.isDeleted_ = true;\r\n            _this.services_ = {};\r\n        });\r\n    };\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage is the only one that is leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {\r\n        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }\r\n        this.checkDestroyed_();\r\n        if (!this.services_[name]) {\r\n            this.services_[name] = {};\r\n        }\r\n        if (!this.services_[name][instanceIdentifier]) {\r\n            /**\r\n             * If a custom instance has been defined (i.e. not '[DEFAULT]')\r\n             * then we will pass that instance on, otherwise we pass `null`\r\n             */\r\n            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME\r\n                ? instanceIdentifier\r\n                : undefined;\r\n            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);\r\n            this.services_[name][instanceIdentifier] = service;\r\n        }\r\n        return this.services_[name][instanceIdentifier];\r\n    };\r\n    /**\r\n     * Callback function used to extend an App instance at the time\r\n     * of service instance creation.\r\n     */\r\n    FirebaseAppImpl.prototype.extendApp = function (props) {\r\n        var _this = this;\r\n        // Copy the object onto the FirebaseAppImpl prototype\r\n        util.deepExtend(this, props);\r\n        /**\r\n         * If the app has overwritten the addAuthTokenListener stub, forward\r\n         * the active token listeners on to the true fxn.\r\n         *\r\n         * TODO: This function is required due to our current module\r\n         * structure. Once we are able to rely strictly upon a single module\r\n         * implementation, this code should be refactored and Auth should\r\n         * provide these stubs and the upgrade logic\r\n         */\r\n        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {\r\n            tokenListeners.forEach(function (listener) {\r\n                _this.INTERNAL.addAuthTokenListener(listener);\r\n            });\r\n            tokenListeners = [];\r\n        }\r\n    };\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    FirebaseAppImpl.prototype.checkDestroyed_ = function () {\r\n        if (this.isDeleted_) {\r\n            error('app-deleted', { name: this.name_ });\r\n        }\r\n    };\r\n    return FirebaseAppImpl;\r\n}());\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n    FirebaseAppImpl.prototype.delete ||\r\n    console.log('dc');\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    var apps_ = {};\r\n    var factories = {};\r\n    var appHooks = {};\r\n    // A namespace is a plain JavaScript Object.\r\n    var namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        __esModule: true,\r\n        initializeApp: initializeApp,\r\n        app: app,\r\n        apps: null,\r\n        Promise: Promise,\r\n        SDK_VERSION: '5.0.4',\r\n        INTERNAL: {\r\n            registerService: registerService,\r\n            createFirebaseNamespace: createFirebaseNamespace,\r\n            extendNamespace: extendNamespace,\r\n            createSubscribe: util.createSubscribe,\r\n            ErrorFactory: util.ErrorFactory,\r\n            removeApp: removeApp,\r\n            factories: factories,\r\n            useAsService: useAsService,\r\n            Promise: Promise,\r\n            deepExtend: util.deepExtend\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    util.patchProperty(namespace, 'default', namespace);\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        var app = apps_[name];\r\n        callAppHooks(app, 'delete');\r\n        delete apps_[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps_, name)) {\r\n            error('no-app', { name: name });\r\n        }\r\n        return apps_[name];\r\n    }\r\n    util.patchProperty(app, 'App', FirebaseAppImpl);\r\n    function initializeApp(options, rawConfig) {\r\n        if (rawConfig === void 0) { rawConfig = {}; }\r\n        if (typeof rawConfig !== 'object' || rawConfig === null) {\r\n            var name_1 = rawConfig;\r\n            rawConfig = { name: name_1 };\r\n        }\r\n        var config = rawConfig;\r\n        if (config.name === undefined) {\r\n            config.name = DEFAULT_ENTRY_NAME;\r\n        }\r\n        var name = config.name;\r\n        if (typeof name !== 'string' || !name) {\r\n            error('bad-app-name', { name: name + '' });\r\n        }\r\n        if (contains(apps_, name)) {\r\n            error('duplicate-app', { name: name });\r\n        }\r\n        var app = new FirebaseAppImpl(options, config, namespace);\r\n        apps_[name] = app;\r\n        callAppHooks(app, 'create');\r\n        return app;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps_).map(function (name) { return apps_[name]; });\r\n    }\r\n    /*\r\n     * Register a Firebase Service.\r\n     *\r\n     * firebase.INTERNAL.registerService()\r\n     *\r\n     * TODO: Implement serviceProperties.\r\n     */\r\n    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {\r\n        // Cannot re-register a service that already exists\r\n        if (factories[name]) {\r\n            error('duplicate-service', { name: name });\r\n        }\r\n        // Capture the service factory for later service instantiation\r\n        factories[name] = createService;\r\n        // Capture the appHook, if passed\r\n        if (appHook) {\r\n            appHooks[name] = appHook;\r\n            // Run the **new** app hook on all existing apps\r\n            getApps().forEach(function (app) {\r\n                appHook('create', app);\r\n            });\r\n        }\r\n        // The Service namespace is an accessor function ...\r\n        var serviceNamespace = function (appArg) {\r\n            if (appArg === void 0) { appArg = app(); }\r\n            if (typeof appArg[name] !== 'function') {\r\n                // Invalid argument.\r\n                // This happens in the following case: firebase.storage('gs:/')\r\n                error('invalid-app-argument', { name: name });\r\n            }\r\n            // Forward service instance lookup to the FirebaseApp.\r\n            return appArg[name]();\r\n        };\r\n        // ... and a container for service-level properties.\r\n        if (serviceProperties !== undefined) {\r\n            util.deepExtend(serviceNamespace, serviceProperties);\r\n        }\r\n        // Monkey-patch the serviceNamespace onto the firebase namespace\r\n        namespace[name] = serviceNamespace;\r\n        // Patch the FirebaseAppImpl prototype\r\n        FirebaseAppImpl.prototype[name] = function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var serviceFxn = this._getService.bind(this, name);\r\n            return serviceFxn.apply(this, allowMultipleInstances ? args : []);\r\n        };\r\n        return serviceNamespace;\r\n    }\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        util.deepExtend(namespace, props);\r\n    }\r\n    function callAppHooks(app, eventName) {\r\n        Object.keys(factories).forEach(function (serviceName) {\r\n            // Ignore virtual services\r\n            var factoryName = useAsService(app, serviceName);\r\n            if (factoryName === null) {\r\n                return;\r\n            }\r\n            if (appHooks[factoryName]) {\r\n                appHooks[factoryName](eventName, app);\r\n            }\r\n        });\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        var useService = name;\r\n        var options = app.options;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\r\nfunction error(code, args) {\r\n    throw appErrors.create(code, args);\r\n}\r\n// TypeScript does not support non-string indexes!\r\n// let errors: {[code: AppError: string} = {\r\nvar errors = {\r\n    'no-app': \"No Firebase App '{$name}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    'bad-app-name': \"Illegal App name: '{$name}\",\r\n    'duplicate-app': \"Firebase App named '{$name}' already exists\",\r\n    'app-deleted': \"Firebase App named '{$name}' already deleted\",\r\n    'duplicate-service': \"Firebase service named '{$name}' already registered\",\r\n    'sa-not-supported': 'Initializing the Firebase SDK with a service ' +\r\n        'account is only allowed in a Node.js environment. On client ' +\r\n        'devices, you should instead initialize the SDK with an api key and ' +\r\n        'auth domain',\r\n    'invalid-app-argument': 'firebase.{$name}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nvar appErrors = new util.ErrorFactory('app', 'Firebase', errors);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar firebase = createFirebaseNamespace();\n\nexports.firebase = firebase;\nexports.default = firebase;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/app/dist/index.cjs.js\n// module id = O4tu\n// module chunks = 0","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_dom-create.js\n// module id = ON07\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar tslib_1 = require('tslib');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nvar CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n * @param {*} assertion The assertion to be tested for falsiness\r\n * @param {!string} message The message to display if the check fails\r\n */\r\nvar assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n * @param {string} message\r\n * @return {!Error}\r\n */\r\nvar assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar stringToByteArray = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) == 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) == 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param {Array<number>} bytes Array of numbers representing characters.\r\n * @return {string} Stringification of the array.\r\n */\r\nvar byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    var out = [], pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        var c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            var c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            var c4 = bytes[pos++];\r\n            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            var c2 = bytes[pos++];\r\n            var c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// Static lookup maps, lazily populated by init_()\r\nvar base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     * @type {string}\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     * @type {string}\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     * @type {boolean}\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param {Array<number>|Uint8Array} input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param {boolean=} opt_webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeByteArray: function (input, opt_webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        var byteToCharMap = opt_webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length; i += 3) {\r\n            var byte1 = input[i];\r\n            var haveByte2 = i + 1 < input.length;\r\n            var byte2 = haveByte2 ? input[i + 1] : 0;\r\n            var haveByte3 = i + 2 < input.length;\r\n            var byte3 = haveByte3 ? input[i + 2] : 0;\r\n            var outByte1 = byte1 >> 2;\r\n            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            var outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param {string} input A string to encode.\r\n     * @param {boolean=} opt_webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} The base64 encoded string.\r\n     */\r\n    encodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray(input), opt_webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param {string} input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return {string} string representing the decoded value.\r\n     */\r\n    decodeString: function (input, opt_webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !opt_webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, opt_webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param {string} input Input to decode.\r\n     * @param {boolean=} opt_webSafe True if we should use the web-safe alphabet.\r\n     * @return {!Array<number>} bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray: function (input, opt_webSafe) {\r\n        this.init_();\r\n        var charToByteMap = opt_webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        var output = [];\r\n        for (var i = 0; i < input.length;) {\r\n            var byte1 = charToByteMap[input.charAt(i++)];\r\n            var haveByte2 = i < input.length;\r\n            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            var haveByte3 = i < input.length;\r\n            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            var haveByte4 = i < input.length;\r\n            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw Error();\r\n            }\r\n            var outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 != 64) {\r\n                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 != 64) {\r\n                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_: function () {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (var i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * URL-safe base64 encoding\r\n * @param {!string} str\r\n * @return {!string}\r\n */\r\nvar base64Encode = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param {string} str To be decoded\r\n * @return {?string} Decoded result, if possible\r\n */\r\nvar base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            var dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (var prop in source) {\r\n        if (!source.hasOwnProperty(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\n// TODO: Really needed (for JSCompiler type checking)?\r\nfunction patchProperty(obj, prop, value) {\r\n    obj[prop] = value;\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Deferred = /** @class */ (function () {\r\n    function Deferred() {\r\n        var _this = this;\r\n        this.promise = new Promise(function (resolve, reject) {\r\n            _this.resolve = resolve;\r\n            _this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     * @param {((?function(?(Error)): (?|undefined))| (?function(?(Error),?=): (?|undefined)))=} callback\r\n     * @return {!function(?(Error), ?=)}\r\n     */\r\n    Deferred.prototype.wrapCallback = function (callback) {\r\n        var _this = this;\r\n        return function (error, value) {\r\n            if (error) {\r\n                _this.reject(error);\r\n            }\r\n            else {\r\n                _this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                _this.promise.catch(function () { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    return Deferred;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return {string} user agent string\r\n */\r\nvar getUA = function () {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap in the Ripple emulator) nor\r\n * Cordova `onDeviceReady`, which would normally wait for a callback.\r\n *\r\n * @return {boolean} isMobileCordova\r\n */\r\nvar isMobileCordova = function () {\r\n    return (typeof window !== 'undefined' &&\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n};\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return {boolean} True if ReactNative environment is detected.\r\n */\r\nvar isReactNative = function () {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n};\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return {boolean} True if Node.js environment is detected.\r\n */\r\nvar isNodeSdk = function () {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n};\n\nvar ERROR_NAME = 'FirebaseError';\r\nvar captureStackTrace = Error\r\n    .captureStackTrace;\r\n// Export for faking in tests\r\nfunction patchCapture(captureFake) {\r\n    var result = captureStackTrace;\r\n    captureStackTrace = captureFake;\r\n    return result;\r\n}\r\nvar FirebaseError = /** @class */ (function () {\r\n    function FirebaseError(code, message) {\r\n        this.code = code;\r\n        this.message = message;\r\n        // We want the stack value, if implemented by Error\r\n        if (captureStackTrace) {\r\n            // Patches this.stack, omitted calls above ErrorFactory#create\r\n            captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n        else {\r\n            try {\r\n                // In case of IE11, stack will be set only after error is raised.\r\n                // https://docs.microsoft.com/en-us/scripting/javascript/reference/stack-property-error-javascript\r\n                throw Error.apply(this, arguments);\r\n            }\r\n            catch (err) {\r\n                this.name = ERROR_NAME;\r\n                // Make non-enumerable getter for the property.\r\n                Object.defineProperty(this, 'stack', {\r\n                    get: function () {\r\n                        return err.stack;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return FirebaseError;\r\n}());\r\n// Back-door inheritance\r\nFirebaseError.prototype = Object.create(Error.prototype);\r\nFirebaseError.prototype.constructor = FirebaseError;\r\nFirebaseError.prototype.name = ERROR_NAME;\r\nvar ErrorFactory = /** @class */ (function () {\r\n    function ErrorFactory(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n        // Matches {$name}, by default.\r\n        this.pattern = /\\{\\$([^}]+)}/g;\r\n        // empty\r\n    }\r\n    ErrorFactory.prototype.create = function (code, data) {\r\n        if (data === undefined) {\r\n            data = {};\r\n        }\r\n        var template = this.errors[code];\r\n        var fullCode = this.service + '/' + code;\r\n        var message;\r\n        if (template === undefined) {\r\n            message = 'Error';\r\n        }\r\n        else {\r\n            message = template.replace(this.pattern, function (match, key) {\r\n                var value = data[key];\r\n                return value !== undefined ? value.toString() : '<' + key + '?>';\r\n            });\r\n        }\r\n        // Service: Error message (service/code).\r\n        message = this.serviceName + ': ' + message + ' (' + fullCode + ').';\r\n        var err = new FirebaseError(fullCode, message);\r\n        // Populate the Error object with message parts for programmatic\r\n        // accesses (e.g., e.file).\r\n        for (var prop in data) {\r\n            if (!data.hasOwnProperty(prop) || prop.slice(-1) === '_') {\r\n                continue;\r\n            }\r\n            err[prop] = data[prop];\r\n        }\r\n        return err;\r\n    };\r\n    return ErrorFactory;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {{header: *, claims: *, data: *, signature: string}}\r\n */\r\nvar decode = function (token) {\r\n    var header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        var parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header: header,\r\n        claims: claims,\r\n        data: data,\r\n        signature: signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidTimestamp = function (token) {\r\n    var claims = decode(token).claims, now = Math.floor(new Date().getTime() / 1000), validSince, validUntil;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (now && validSince && validUntil && now >= validSince && now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {?number}\r\n */\r\nvar issuedAtTime = function (token) {\r\n    var claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time and non-empty\r\n * signature.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isValidFormat = function (token) {\r\n    var decoded = decode(token), claims = decoded.claims;\r\n    return (!!decoded.signature &&\r\n        !!claims &&\r\n        typeof claims === 'object' &&\r\n        claims.hasOwnProperty('iat'));\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n *\r\n * @param {?string} token\r\n * @return {boolean}\r\n */\r\nvar isAdmin = function (token) {\r\n    var claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/\r\nvar contains = function (obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n};\r\nvar safeGet = function (obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key))\r\n        return obj[key];\r\n    // else return undefined.\r\n};\r\n/**\r\n * Enumerates the keys/values in an object, excluding keys defined on the prototype.\r\n *\r\n * @param {?Object.<K,V>} obj Object to enumerate.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar forEach = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Copies all the (own) properties from one object to another.\r\n * @param {!Object} objTo\r\n * @param {!Object} objFrom\r\n * @return {!Object} objTo\r\n */\r\nvar extend = function (objTo, objFrom) {\r\n    forEach(objFrom, function (key, value) {\r\n        objTo[key] = value;\r\n    });\r\n    return objTo;\r\n};\r\n/**\r\n * Returns a clone of the specified object.\r\n * @param {!Object} obj\r\n * @return {!Object} cloned obj.\r\n */\r\nvar clone = function (obj) {\r\n    return extend({}, obj);\r\n};\r\n/**\r\n * Returns true if obj has typeof \"object\" and is not null.  Unlike goog.isObject(), does not return true\r\n * for functions.\r\n *\r\n * @param obj {*} A potential object.\r\n * @returns {boolean} True if it's an object.\r\n */\r\nvar isNonNullObject = function (obj) {\r\n    return typeof obj === 'object' && obj !== null;\r\n};\r\nvar isEmpty = function (obj) {\r\n    for (var key in obj) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nvar getCount = function (obj) {\r\n    var rv = 0;\r\n    for (var key in obj) {\r\n        rv++;\r\n    }\r\n    return rv;\r\n};\r\nvar map = function (obj, f, opt_obj) {\r\n    var res = {};\r\n    for (var key in obj) {\r\n        res[key] = f.call(opt_obj, obj[key], key, obj);\r\n    }\r\n    return res;\r\n};\r\nvar findKey = function (obj, fn, opt_this) {\r\n    for (var key in obj) {\r\n        if (fn.call(opt_this, obj[key], key, obj)) {\r\n            return key;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nvar findValue = function (obj, fn, opt_this) {\r\n    var key = findKey(obj, fn, opt_this);\r\n    return key && obj[key];\r\n};\r\nvar getAnyKey = function (obj) {\r\n    for (var key in obj) {\r\n        return key;\r\n    }\r\n};\r\nvar getValues = function (obj) {\r\n    var res = [];\r\n    var i = 0;\r\n    for (var key in obj) {\r\n        res[i++] = obj[key];\r\n    }\r\n    return res;\r\n};\r\n/**\r\n * Tests whether every key/value pair in an object pass the test implemented\r\n * by the provided function\r\n *\r\n * @param {?Object.<K,V>} obj Object to test.\r\n * @param {!function(K, V)} fn Function to call for each key and value.\r\n * @template K,V\r\n */\r\nvar every = function (obj, fn) {\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (!fn(key, obj[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params\r\n * object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n *\r\n * @param {!Object} querystringParams\r\n * @return {string}\r\n */\r\nvar querystring = function (querystringParams) {\r\n    var params = [];\r\n    forEach(querystringParams, function (key, value) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(function (arrayVal) {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    });\r\n    return params.length ? '&' + params.join('&') : '';\r\n};\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})\r\n *\r\n * @param {string} querystring\r\n * @return {!Object}\r\n */\r\nvar querystringDecode = function (querystring) {\r\n    var obj = {};\r\n    var tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(function (token) {\r\n        if (token) {\r\n            var key = token.split('=');\r\n            obj[key[0]] = key[1];\r\n        }\r\n    });\r\n    return obj;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Copyright 2011 The Closure Library Authors. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n/**\r\n * @fileoverview Abstract cryptographic hash interface.\r\n *\r\n * See Sha1 and Md5 for sample implementations.\r\n *\r\n */\r\n/**\r\n * Create a cryptographic hash instance.\r\n *\r\n * @constructor\r\n * @struct\r\n */\r\nvar Hash = /** @class */ (function () {\r\n    function Hash() {\r\n        /**\r\n         * The block size for the hasher.\r\n         * @type {number}\r\n         */\r\n        this.blockSize = -1;\r\n    }\r\n    return Hash;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @extends {Hash}\r\n * @final\r\n * @struct\r\n */\r\nvar Sha1 = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Sha1, _super);\r\n    function Sha1() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @type {!Array<number>}\r\n         * @private\r\n         */\r\n        _this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        _this.total_ = 0;\r\n        _this.blockSize = 512 / 8;\r\n        _this.pad_[0] = 128;\r\n        for (var i = 1; i < _this.blockSize; ++i) {\r\n            _this.pad_[i] = 0;\r\n        }\r\n        _this.reset();\r\n        return _this;\r\n    }\r\n    Sha1.prototype.reset = function () {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    };\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param {!Array<number>|!Uint8Array|string} buf Block to compress.\r\n     * @param {number=} opt_offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    Sha1.prototype.compress_ = function (buf, opt_offset) {\r\n        if (!opt_offset) {\r\n            opt_offset = 0;\r\n        }\r\n        var W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (var i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(opt_offset) << 24) |\r\n                        (buf.charCodeAt(opt_offset + 1) << 16) |\r\n                        (buf.charCodeAt(opt_offset + 2) << 8) |\r\n                        buf.charCodeAt(opt_offset + 3);\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (var i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[opt_offset] << 24) |\r\n                        (buf[opt_offset + 1] << 16) |\r\n                        (buf[opt_offset + 2] << 8) |\r\n                        buf[opt_offset + 3];\r\n                opt_offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (var i = 16; i < 80; i++) {\r\n            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        var a = this.chain_[0];\r\n        var b = this.chain_[1];\r\n        var c = this.chain_[2];\r\n        var d = this.chain_[3];\r\n        var e = this.chain_[4];\r\n        var f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (var i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    };\r\n    Sha1.prototype.update = function (bytes, opt_length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (opt_length === undefined) {\r\n            opt_length = bytes.length;\r\n        }\r\n        var lengthMinusBlock = opt_length - this.blockSize;\r\n        var n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        var buf = this.buf_;\r\n        var inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < opt_length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf == 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < opt_length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf == this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += opt_length;\r\n    };\r\n    /** @override */\r\n    Sha1.prototype.digest = function () {\r\n        var digest = [];\r\n        var totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (var i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        var n = 0;\r\n        for (var i = 0; i < 5; i++) {\r\n            for (var j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    };\r\n    return Sha1;\r\n}(Hash));\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    var proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nvar ObserverProxy = /** @class */ (function () {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    function ObserverProxy(executor, onNoObservers) {\r\n        var _this = this;\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(function () {\r\n            executor(_this);\r\n        })\r\n            .catch(function (e) {\r\n            _this.error(e);\r\n        });\r\n    }\r\n    ObserverProxy.prototype.next = function (value) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.next(value);\r\n        });\r\n    };\r\n    ObserverProxy.prototype.error = function (error) {\r\n        this.forEachObserver(function (observer) {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    };\r\n    ObserverProxy.prototype.complete = function () {\r\n        this.forEachObserver(function (observer) {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    };\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {\r\n        var _this = this;\r\n        var observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error: error,\r\n                complete: complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        var unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            this.task.then(function () {\r\n                try {\r\n                    if (_this.finalError) {\r\n                        observer.error(_this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    };\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    ObserverProxy.prototype.unsubscribeOne = function (i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    };\r\n    ObserverProxy.prototype.forEachObserver = function (fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (var i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    };\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    ObserverProxy.prototype.sendOne = function (i, fn) {\r\n        var _this = this;\r\n        // Execute the callback asynchronously\r\n        this.task.then(function () {\r\n            if (_this.observers !== undefined && _this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(_this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n    ObserverProxy.prototype.close = function (err) {\r\n        var _this = this;\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        this.task.then(function () {\r\n            _this.observers = undefined;\r\n            _this.onNoObservers = undefined;\r\n        });\r\n    };\r\n    return ObserverProxy;\r\n}());\r\n/** Turn synchronous function into one called asynchronously. */\r\nfunction async(fn, onError) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        Promise.resolve(true)\r\n            .then(function () {\r\n            fn.apply(void 0, args);\r\n        })\r\n            .catch(function (error) {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {\r\n        var method = methods_1[_i];\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} minCount The minimum number of arguments to allow for the function call\r\n * @param {!number} maxCount The maximum number of argument to allow for the function call\r\n * @param {!number} argCount The actual number of arguments provided.\r\n */\r\nvar validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    var argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        var error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param {!string} fnName The function name\r\n * @param {!number} argumentNumber The index of the argument\r\n * @param {boolean} optional Whether or not the argument is optional\r\n * @return {!string} The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argumentNumber, optional) {\r\n    var argName = '';\r\n    switch (argumentNumber) {\r\n        case 1:\r\n            argName = optional ? 'first' : 'First';\r\n            break;\r\n        case 2:\r\n            argName = optional ? 'second' : 'Second';\r\n            break;\r\n        case 3:\r\n            argName = optional ? 'third' : 'Third';\r\n            break;\r\n        case 4:\r\n            argName = optional ? 'fourth' : 'Fourth';\r\n            break;\r\n        default:\r\n            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');\r\n    }\r\n    var error = fnName + ' failed: ';\r\n    error += argName + ' argument ';\r\n    return error;\r\n}\r\n/**\r\n * @param {!string} fnName\r\n * @param {!number} argumentNumber\r\n * @param {!string} namespace\r\n * @param {boolean} optional\r\n */\r\nfunction validateNamespace(fnName, argumentNumber, namespace, optional) {\r\n    if (optional && !namespace)\r\n        return;\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentNumber, callback, optional) {\r\n    if (optional && !callback)\r\n        return;\r\n    if (typeof callback !== 'function')\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid function.');\r\n}\r\nfunction validateContextObject(fnName, argumentNumber, context, optional) {\r\n    if (optional && !context)\r\n        return;\r\n    if (typeof context !== 'object' || context === null)\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid context object.');\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nvar stringToByteArray$1 = function (str) {\r\n    var out = [], p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            var high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nvar stringLength = function (str) {\r\n    var p = 0;\r\n    for (var i = 0; i < str.length; i++) {\r\n        var c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nexports.assert = assert;\nexports.assertionError = assertionError;\nexports.base64 = base64;\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\nexports.CONSTANTS = CONSTANTS;\nexports.deepCopy = deepCopy;\nexports.deepExtend = deepExtend;\nexports.patchProperty = patchProperty;\nexports.Deferred = Deferred;\nexports.getUA = getUA;\nexports.isMobileCordova = isMobileCordova;\nexports.isNodeSdk = isNodeSdk;\nexports.isReactNative = isReactNative;\nexports.ErrorFactory = ErrorFactory;\nexports.FirebaseError = FirebaseError;\nexports.patchCapture = patchCapture;\nexports.jsonEval = jsonEval;\nexports.stringify = stringify;\nexports.decode = decode;\nexports.isAdmin = isAdmin;\nexports.issuedAtTime = issuedAtTime;\nexports.isValidFormat = isValidFormat;\nexports.isValidTimestamp = isValidTimestamp;\nexports.clone = clone;\nexports.contains = contains;\nexports.every = every;\nexports.extend = extend;\nexports.findKey = findKey;\nexports.findValue = findValue;\nexports.forEach = forEach;\nexports.getAnyKey = getAnyKey;\nexports.getCount = getCount;\nexports.getValues = getValues;\nexports.isEmpty = isEmpty;\nexports.isNonNullObject = isNonNullObject;\nexports.map = map;\nexports.safeGet = safeGet;\nexports.querystring = querystring;\nexports.querystringDecode = querystringDecode;\nexports.Sha1 = Sha1;\nexports.async = async;\nexports.createSubscribe = createSubscribe;\nexports.errorPrefix = errorPrefix;\nexports.validateArgCount = validateArgCount;\nexports.validateCallback = validateCallback;\nexports.validateContextObject = validateContextObject;\nexports.validateNamespace = validateNamespace;\nexports.stringLength = stringLength;\nexports.stringToByteArray = stringToByteArray$1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/util/dist/index.cjs.js\n// module id = Pxmi\n// module chunks = 0","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-gpo.js\n// module id = PzxK\n// module chunks = 0","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-length.js\n// module id = QRG4\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_cof.js\n// module id = R9M2\n// module chunks = 0","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_html.js\n// module id = RPLV\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_classof.js\n// module id = RY/4\n// module chunks = 0","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_fails.js\n// module id = S82l\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_ie8-dom-define.js\n// module id = SfB7\n// module chunks = 0","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = TToO\n// module chunks = 0","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-iobject.js\n// module id = TcQ7\n// module chunks = 0","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-integer.js\n// module id = UuGF\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_property-desc.js\n// module id = X8DO\n// module chunks = 0","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-create.js\n// module id = Yobk\n// module chunks = 0","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared-key.js\n// module id = ax3d\n// module chunks = 0","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_wks.js\n// module id = dSzd\n// module chunks = 0","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_set-to-string-tag.js\n// module id = e6n0\n// module chunks = 0","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_shared.js\n// module id = e8AB\n// module chunks = 0","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dp.js\n// module id = evD5\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/keys.js\n// module id = fZjL\n// module chunks = 0","/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel)\r\n        return;\r\n    var now = new Date().toISOString();\r\n    switch (logType) {\r\n        /**\r\n         * By default, `console.debug` is not displayed in the developer console (in\r\n         * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n         * logs to the `console.log` function.\r\n         */\r\n        case LogLevel.DEBUG:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.VERBOSE:\r\n            console.log.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.INFO:\r\n            console.info.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.WARN:\r\n            console.warn.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        case LogLevel.ERROR:\r\n            console.error.apply(console, [\"[\" + now + \"]  \" + instance.name + \":\"].concat(args));\r\n            break;\r\n        default:\r\n            throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The log handler for the Logger instance.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError('Invalid value assigned to `logLevel`');\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));\r\n    };\r\n    return Logger;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.logLevel = level;\r\n    });\r\n}\n\nexport { setLogLevel, Logger, LogLevel };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/logger/dist/index.esm.js\n// module id = fjI4\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-absolute-index.js\n// module id = fkB2\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/get-iterator.js\n// module id = fxRn\n// module chunks = 0","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/core.get-iterator.js\n// module id = g8Ux\n// module chunks = 0","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_string-at.js\n// module id = h65t\n// module chunks = 0","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_hide.js\n// module id = hJx8\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar util = require('@firebase/util');\nvar logger = require('@firebase/logger');\nvar tslib_1 = require('tslib');\nvar firebase = _interopDefault(require('@firebase/app'));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < var_args.length; i++) {\r\n        if (Array.isArray(var_args[i]) ||\r\n            (var_args[i] &&\r\n                typeof var_args[i] === 'object' &&\r\n                typeof var_args[i].length === 'number')) {\r\n            message += buildLogMessage_.apply(null, var_args[i]);\r\n        }\r\n        else if (typeof var_args[i] === 'object') {\r\n            message += util.stringify(var_args[i]);\r\n        }\r\n        else {\r\n            message += var_args[i];\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger$1 = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || (logger_ === true || logger_ === false), \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger.LogLevel.VERBOSE;\r\n        logger$1 = logClient.log.bind(logClient);\r\n        if (persistent)\r\n            SessionStorage.set('logging_enabled', true);\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger$1 = logger_;\r\n    }\r\n    else {\r\n        logger$1 = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} var_args\r\n */\r\nvar log = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger$1 === null && SessionStorage.get('logging_enabled') === true)\r\n            enableLogging(true);\r\n    }\r\n    if (logger$1) {\r\n        var message = buildLogMessage_.apply(null, var_args);\r\n        logger$1(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar error = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} var_args\r\n */\r\nvar fatal = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} var_args\r\n */\r\nvar warn = function () {\r\n    var var_args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        var_args[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, var_args);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data != data || // NaN\r\n            data == Number.POSITIVE_INFINITY ||\r\n            data == Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete')\r\n                    wrappedFn_1();\r\n            });\r\n            // fallback to onload.\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt == 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null)\r\n        return util.stringify(obj);\r\n    var keys = [];\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0)\r\n            key += ',';\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param {!(Object|Array)} obj The object or array to iterate over\r\n * @param {function(?, ?)} fn The function to apply\r\n */\r\nvar each = function (obj, fn) {\r\n    if (Array.isArray(obj)) {\r\n        for (var i = 0; i < obj.length; ++i) {\r\n            fn(i, obj[i]);\r\n        }\r\n    }\r\n    else {\r\n        /**\r\n         * in the conversion of code we removed the goog.object.forEach\r\n         * function which did a value,key callback. We standardized on\r\n         * a single impl that does a key, value callback. So we invert\r\n         * to not have to touch the `each` code points\r\n         */\r\n        util.forEach(obj, function (key, val) { return fn(val, key); });\r\n    }\r\n};\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1, s, e, f, ln, i, bits, str;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1)\r\n            hexByte = '0' + hexByte;\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code == 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code == 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length)\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + this.pieces_[i];\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '')\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length)\r\n            return null;\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++)\r\n            pieces.push(this.pieces_[i]);\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0)\r\n                    pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0)\r\n                return cmp;\r\n        }\r\n        if (leftKeys.length === rightKeys.length)\r\n            return 0;\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length == 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost = PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return this.host !== this.internalHost || this.isCustomHost();\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        util.forEach(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var results = {};\r\n    if (queryString.startsWith('?')) {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (var _i = 0, _a = queryString.split('&'); _i < _a.length; _i++) {\r\n        var segment = _a[_i];\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        var kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n        }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseURL(dataURL), namespace = parsedUrl.subdomain;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace == 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string}}\r\n */\r\nvar parseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Support `ns` query param if subdomain not already set\r\n        if (subdomain === '' && 'ns' in queryParams) {\r\n            subdomain = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString\r\n    };\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority && typeof priority === 'object' && util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false, hasActualChild_1 = false;\r\n        util.forEach(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) {\r\n                // .priority is OK\r\n            }\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined)\r\n        return;\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    util.forEach(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined)\r\n        return;\r\n    if (isInvalidJSONNumber(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined)\r\n        return;\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined)\r\n        return;\r\n    if (!isValidKey(key))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined)\r\n        return;\r\n    if (!isValidPathString(pathString))\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined)\r\n        return;\r\n    if (typeof bool !== 'boolean')\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number')\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    else\r\n        return 'string:' + priority;\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty())\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        else\r\n            return this.getValue();\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty())\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_)\r\n                cmp *= -1;\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_)\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        else\r\n            result = { key: node.key, value: node.value };\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0)\r\n            return null;\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var cmp, n;\r\n        n = this;\r\n        cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_())\r\n            n = n.moveRedLeft_();\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_())\r\n                n = n.rotateRight_();\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_())\r\n            n = n.rotateLeft_();\r\n        if (n.left.isRed_() && n.left.left.isRed_())\r\n            n = n.rotateRight_();\r\n        if (n.left.isRed_() && n.right.isRed_())\r\n            n = n.colorFlip_();\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        var blackDepth;\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty())\r\n                        node = node.right;\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length == 0) {\r\n            return null;\r\n        }\r\n        else if (length == 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\n/**\r\n *\r\n * @param {Object.<string, FallbackType|SortedMap.<NamedNode, Node>>} indexes\r\n * @param {Object.<string, Index>} indexSet\r\n * @constructor\r\n */\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         * @type {!IndexMap}\r\n         * @const\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     *\r\n     * @param {!string} indexKey\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap)\r\n            throw new Error('No index defined for ' + indexKey);\r\n        if (sortedMap === fallbackObject) {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n        else {\r\n            return sortedMap;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {boolean}\r\n     */\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = util.clone(this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = util.clone(this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name != namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     * @param {!NamedNode} namedNode\r\n     * @param {!SortedMap.<string, !Node>} existingChildren\r\n     * @return {!IndexMap}\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null)\r\n            return this;\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0, newPriority = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            newPriority = newChildren.isEmpty() ? EMPTY_NODE : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty())\r\n            return null;\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            for (var key in obj)\r\n                array[key] = obj[key];\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty())\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '')\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib_1.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj_1 = json;\r\n        util.forEach(hinzeJsonObj_1, function (key, child) {\r\n            if (typeof key !== 'string' || key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(hinzeJsonObj_1[key]);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length == 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        var jsonObj_1 = json;\r\n        util.forEach(jsonObj_1, function (key, childData) {\r\n            if (util.contains(jsonObj_1, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty())\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode())\r\n            return false;\r\n        else\r\n            return !this.node_.isEmpty();\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ (change.childName));\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherCount = util.getCount(other.callbacks_);\r\n                var thisCount = util.getCount(this.callbacks_);\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    //  If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey /** @type {!string} */ = util.getAnyKey(other.callbacks_);\r\n                        var thisKey /** @type {!string} */ = util.getAnyKey(this.callbacks_);\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return util.every(this.callbacks_, function (eventType, cb) { return other.callbacks_[eventType] === cb; });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName != MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName != MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param cancelOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, cancelOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', cancelOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel)\r\n                ret.cancel.bind(ret.context)(err);\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error$$1 = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error$$1);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements a set with a count of elements.\r\n *\r\n * @template K, V\r\n */\r\nvar CountedSet = /** @class */ (function () {\r\n    function CountedSet() {\r\n        this.set = {};\r\n    }\r\n    /**\r\n     * @param {!K} item\r\n     * @param {V} val\r\n     */\r\n    CountedSet.prototype.add = function (item, val) {\r\n        this.set[item] = val !== null ? val : true;\r\n    };\r\n    /**\r\n     * @param {!K} key\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.contains = function (key) {\r\n        return util.contains(this.set, key);\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     * @return {V}\r\n     */\r\n    CountedSet.prototype.get = function (item) {\r\n        return this.contains(item) ? this.set[item] : undefined;\r\n    };\r\n    /**\r\n     * @param {!K} item\r\n     */\r\n    CountedSet.prototype.remove = function (item) {\r\n        delete this.set[item];\r\n    };\r\n    /**\r\n     * Deletes everything in the set\r\n     */\r\n    CountedSet.prototype.clear = function () {\r\n        this.set = {};\r\n    };\r\n    /**\r\n     * True if there's nothing in the set\r\n     * @return {boolean}\r\n     */\r\n    CountedSet.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.set);\r\n    };\r\n    /**\r\n     * @return {number} The number of items in the set\r\n     */\r\n    CountedSet.prototype.count = function () {\r\n        return util.getCount(this.set);\r\n    };\r\n    /**\r\n     * Run a function on each k,v pair in the set\r\n     * @param {function(K, V)} fn\r\n     */\r\n    CountedSet.prototype.each = function (fn) {\r\n        util.forEach(this.set, function (k, v) { return fn(k, v); });\r\n    };\r\n    /**\r\n     * Mostly for debugging\r\n     * @return {Array.<K>} The keys present in this CountedSet\r\n     */\r\n    CountedSet.prototype.keys = function () {\r\n        var keys = [];\r\n        util.forEach(this.set, function (k) {\r\n            keys.push(k);\r\n        });\r\n        return keys;\r\n    };\r\n    return CountedSet;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n *\r\n * @constructor\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        /**\r\n         * @private\r\n         * @type {Node}\r\n         */\r\n        this.value_ = null;\r\n        /**\r\n         * @private\r\n         * @type {CountedSet}\r\n         */\r\n        this.children_ = null;\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {?Node} The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value_ != null) {\r\n            return this.value_.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children_ != null) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children_.contains(childKey)) {\r\n                var childTree = this.children_.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @param {!Node} data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = data;\r\n            this.children_ = null;\r\n        }\r\n        else if (this.value_ !== null) {\r\n            this.value_ = this.value_.updateChild(path, data);\r\n        }\r\n        else {\r\n            if (this.children_ == null) {\r\n                this.children_ = new CountedSet();\r\n            }\r\n            var childKey = path.getFront();\r\n            if (!this.children_.contains(childKey)) {\r\n                this.children_.add(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children_.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param {!Path} path Path to look up snapshot for.\r\n     * @return {boolean} True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value_ = null;\r\n            this.children_ = null;\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value_ !== null) {\r\n                if (this.value_.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value_;\r\n                    this.value_ = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children_ !== null) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children_.contains(childKey)) {\r\n                    var safeToRemove = this.children_.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children_.remove(childKey);\r\n                    }\r\n                }\r\n                if (this.children_.isEmpty()) {\r\n                    this.children_ = null;\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param {!Path} prefixPath Path to look up node for.\r\n     * @param {!Function} func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value_ !== null) {\r\n            func(prefixPath, this.value_);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param {!Function} func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        if (this.children_ !== null) {\r\n            this.children_.each(function (key, tree) {\r\n                func(key, tree);\r\n            });\r\n        }\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (value, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ affectedTree, \r\n    /**@inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        util.forEach(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /**@inheritDoc */ source, \r\n    /**@inheritDoc */ path, \r\n    /**@inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() == newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap_ = {};\r\n    }\r\n    /**\r\n     * @param {!Change} change\r\n     */\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey /** @type {!string} */ = change.childName;\r\n        util.assert(type == Change.CHILD_ADDED ||\r\n            type == Change.CHILD_CHANGED ||\r\n            type == Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = util.safeGet(this.changeMap_, childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type == Change.CHILD_ADDED && oldType == Change.CHILD_REMOVED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                delete this.changeMap_[childKey];\r\n            }\r\n            else if (type == Change.CHILD_REMOVED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childRemovedChange(childKey, oldChange.oldSnap);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_ADDED) {\r\n                this.changeMap_[childKey] = Change.childAddedChange(childKey, change.snapshotNode);\r\n            }\r\n            else if (type == Change.CHILD_CHANGED &&\r\n                oldType == Change.CHILD_CHANGED) {\r\n                this.changeMap_[childKey] = Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap);\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap_[childKey] = change;\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Array.<!Change>}\r\n     */\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return util.getValues(this.changeMap_);\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap\r\n                        .getNode()\r\n                        .equals(/** @type {!Node} */ (oldCompleteSnap))) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey == '.priority') {\r\n                    util.assert(changePath.getLength() == 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey == '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         *\r\n         * @type {!Object.<!string, !View>}\r\n         * @private\r\n         */\r\n        this.views_ = {};\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return util.isEmpty(this.views_);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} optCompleteServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = util.safeGet(this.views_, queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events_1 = [];\r\n            util.forEach(this.views_, function (key, view) {\r\n                events_1 = events_1.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n            });\r\n            return events_1;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = util.safeGet(this.views_, queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ (eventCache), eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ (serverCache), serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views_[queryId] = view;\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            // When you do ref.off(...), we search all views for the registration to remove.\r\n            var self_1 = this;\r\n            util.forEach(this.views_, function (viewQueryId, view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete self_1.views_[viewQueryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = util.safeGet(this.views_, queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    delete this.views_[queryId];\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    /**\r\n     * @return {!Array.<!View>}\r\n     */\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var _this = this;\r\n        var values = Object.keys(this.views_).map(function (key) { return _this.views_[key]; });\r\n        return values.filter(function (view) {\r\n            return !view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path The path to the desired complete snapshot\r\n     * @return {?Node} A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var serverCache = null;\r\n        util.forEach(this.views_, function (key, view) {\r\n            serverCache = serverCache || view.getCompleteServerCache(path);\r\n        });\r\n        return serverCache;\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return util.safeGet(this.views_, queryId);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    /**\r\n     * @return {?View}\r\n     */\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var completeView = util.findValue(this.views_, function (view) {\r\n            return view\r\n                .getQuery()\r\n                .getQueryParams()\r\n                .loadsAllData();\r\n        });\r\n        return completeView || null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n *\r\n * @constructor\r\n * @param {!ImmutableTree.<!Node>} writeTree\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Node} node\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} updates\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        util.forEach(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param {!Path} path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param {!Path} path The path to check for\r\n     * @return {boolean} Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param {!Path} path The path to get a complete write\r\n     * @return {?Node} The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return {!Array.<NamedNode>} A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {!CompoundWrite}\r\n     */\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return {boolean} Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param {!Node} node The node to apply this CompoundWrite to\r\n     * @return {!Node} The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return CompoundWrite.applySubtreeWrite_(Path.Empty, this.writeTree_, node);\r\n    };\r\n    /**\r\n     * @type {!CompoundWrite}\r\n     */\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @param {!ImmutableTree.<!Node>} writeTree\r\n     * @param {!Node} node\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    CompoundWrite.applySubtreeWrite_ = function (relativePath, writeTree, node) {\r\n        if (writeTree.value != null) {\r\n            // Since there a write is always a leaf, we're done here\r\n            return node.updateChild(relativePath, writeTree.value);\r\n        }\r\n        else {\r\n            var priorityWrite_1 = null;\r\n            writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n                if (childKey === '.priority') {\r\n                    // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                    // to apply priorities to empty nodes that are later filled\r\n                    util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                    priorityWrite_1 = childTree.value;\r\n                }\r\n                else {\r\n                    node = CompoundWrite.applySubtreeWrite_(relativePath.child(childKey), childTree, node);\r\n                }\r\n            });\r\n            // If there was a priority write, we only apply it if the node is not empty\r\n            if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n                node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n            }\r\n            return node;\r\n        }\r\n    };\r\n    return CompoundWrite;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                util.forEach(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * @param {!WriteRecord} writeRecord\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            // findKey can return undefined, so use !! to coerce to boolean\r\n            return !!util.findKey(writeRecord.children, function (childSnap, childName) {\r\n                return writeRecord.path.child(childName).contains(path);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     * @private\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     *\r\n     * @param {!WriteRecord} write\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     *\r\n     * @param {!Array.<!WriteRecord>} writes\r\n     * @param {!function(!WriteRecord):boolean} filter\r\n     * @param {!Path} treeRoot\r\n     * @return {!CompoundWrite}\r\n     * @private\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no overlap between root path and write path, ignore write\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         * @type {!ImmutableTree.<!SyncPoint>}\r\n         * @private\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         * @type {!WriteTree}\r\n         * @private\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap_ = {};\r\n        this.queryToTagMap_ = {};\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @param {number} writeId\r\n     * @param {boolean=} visible\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param {!number} writeId\r\n     * @param {boolean=} revert True if the given write failed and needs to be reverted\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                util.forEach(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} newData\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!number} tag\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!(queryKey in this.queryToTagMap_), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap_[queryKey] = tag;\r\n            // Coerce to string to avoid sparse arrays.\r\n            this.tagToQueryMap_['_' + tag] = queryKey;\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, all callbacks are removed.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                else {\r\n                    // There's nothing below us, so nothing we need to start listening on\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap_[SyncTree.makeQueryKey_(queryToRemove)];\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        else {\r\n            // No-op, this listener must've been already removed\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     * @param {!Path} path The path to the data we want\r\n     * @param {Array.<number>=} writeIdsToExclude A specific set to be excluded\r\n     * @return {?Node}\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     *\r\n     * @param {!ImmutableTree.<!SyncPoint>} subtree\r\n     * @return {!Array.<!View>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                util.forEach(childMap, function (key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Array.<!Query>} queries\r\n     * @private\r\n     */\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap_[removedQueryKey];\r\n                delete this.queryToTagMap_[removedQueryKey];\r\n                delete this.tagToQueryMap_['_' + removedQueryTag];\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     * @param {!Query} query\r\n     * @return {!Query} The normalized query\r\n     * @private\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return /** @type {!Query} */ query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!View} view\r\n     * @return {!Array.<!Event>} This method can return events to support synchronous data sources\r\n     * @private\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    util.forEach(childMap, function (key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!View} view\r\n     * @return {{hashFn: function(), onComplete: function(!string, *)}}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error$$1 = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error$$1);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     * @private\r\n     * @param {!Query} query\r\n     * @return {string}\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     * @private\r\n     * @param {!string} queryKey\r\n     * @return {{queryId: !string, path: !Path}}\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     * @param {!number} tag\r\n     * @return {?string}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap_['_' + tag];\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     * @param {!Query} query\r\n     * @return {?number}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return util.safeGet(this.queryToTagMap_, queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     *\r\n     * @param {!Path} queryPath\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n  \n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n  \n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @return {!Array.<!Event>}\r\n     * @private\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     *\r\n     * @private\r\n     * @param {!Operation} operation\r\n     * @param {ImmutableTree.<!SyncPoint>} syncPointTree\r\n     * @param {?Node} serverCache\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    /**\r\n     * @param {!FirebaseApp} app_\r\n     */\r\n    function AuthTokenProvider(app_) {\r\n        this.app_ = app_;\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return this.app_['INTERNAL']['getToken'](forceRefresh).then(null, \r\n        // .catch\r\n        function (error$$1) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error$$1 && error$$1.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error$$1);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        this.app_['INTERNAL']['addAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.app_['INTERNAL']['removeAuthTokenListener'](listener);\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name))\r\n            this.counters_[name] = 0;\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = util.clone(newStats);\r\n        if (this.last_) {\r\n            util.forEach(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        util.forEach(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger$1) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} var_args\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var var_args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            var_args[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = this.listeners_[eventType].slice();\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, var_args);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_)\r\n                return;\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var command = args[0], arg1 = args[1], arg2 = args[2];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder)\r\n                    return; // we closed the connection.\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command == FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var pN = args[0], data = args[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier)\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (!util.isNodeSdk() &&\r\n                typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n        // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n        return (BrowserPollConnection.forceAllow_ ||\r\n            (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp() &&\r\n                !util.isNodeSdk()));\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk())\r\n            return;\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        /**\r\n         * @type {CountedSet.<number, number>}\r\n         */\r\n        this.outstandingRequests = new CountedSet();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n        }\r\n        else if (iframe.document) {\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        if (util.isNodeSdk() && this.myID) {\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            var theURL = this.urlFn(urlParams);\r\n            FirebaseIFrameScriptHolder.nodeRestRequest(theURL);\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.count() < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length + SEG_HEADER_SIZE + curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial, 1);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.remove(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls)\r\n                        return;\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + firebase.SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') == 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                this.log_(error$$1);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            var error$$1 = e.message || e.data;\r\n            if (error$$1) {\r\n                _this.log_(error$$1);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length == this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null)\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable)\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports_1 = (this.transports_ = []);\r\n            each(TransportManager.ALL_TRANSPORTS, function (i, transport) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports_1.push(transport);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeout_ms = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeout_ms > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n            }, Math.floor(healthyTimeout_ms));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ != 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer == 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer == 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ == 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param onConnectStatus_\r\n     * @param onServerInfoUpdate_\r\n     * @param authTokenProvider_\r\n     * @param authOverride_\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        /** @private {Object} */\r\n        _this.interruptReasons_ = {};\r\n        _this.listens_ = {};\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        /** @private {number|null} */\r\n        _this.establishConnectionTimer_ = null;\r\n        /** @private {boolean} */\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        /** @private {?{\r\n         *   sendRequest(Object),\r\n         *   close()\r\n         * }} */\r\n        _this.realtime_ = null;\r\n        /** @private {string|null} */\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!string} action\r\n     * @param {*} body\r\n     * @param {function(*)=} onResponse\r\n     * @protected\r\n     */\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        this.listens_[pathString] = this.listens_[pathString] || {};\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens_[pathString][queryId], 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens_[pathString][queryId] = listenSpec;\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!{onComplete(),\r\n     *           hashFn():!string,\r\n     *           query: !Query,\r\n     *           tag: ?number}} listenSpec\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens_[pathString] && _this.listens_[pathString][queryId];\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {*} payload\r\n     * @param {!Query} query\r\n     * @private\r\n     */\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    /**\r\n     * @param {!string} credential\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined)\r\n            request[ /*hash*/'h'] = hash;\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete)\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {*} message\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        else if (action === 'm')\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        else if (action === 'c')\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        else if (action === 'ac')\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        else if (action === 'sd')\r\n            this.onSecurityDebugPacket_(body);\r\n        else\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n        }, Math.floor(timeout));\r\n    };\r\n    /**\r\n     * @param {boolean} visible\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT)\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error$$1) {\r\n                self_1.log_('Failed to get token: ' + error$$1);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error$$1);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} reason\r\n     */\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete)\r\n                    put.onComplete('disconnect');\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0)\r\n            this.outstandingPuts_ = [];\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {Array.<*>=} query\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete)\r\n            listen.onComplete('permission_denied');\r\n    };\r\n    /**\r\n     * @param {!string} pathString\r\n     * @param {!string} queryId\r\n     * @return {{queries:Array.<Query>, onComplete:function(string)}}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens_[normalizedPathString] !== undefined) {\r\n            listen = this.listens_[normalizedPathString][queryId];\r\n            delete this.listens_[normalizedPathString][queryId];\r\n            if (util.getCount(this.listens_[normalizedPathString]) === 0) {\r\n                delete this.listens_[normalizedPathString];\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var _this = this;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        util.forEach(this.listens_, function (pathString, queries) {\r\n            util.forEach(queries, function (key, listenSpec) {\r\n                _this.sendListen_(listenSpec);\r\n            });\r\n        });\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i])\r\n                this.sendPut_(i);\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + firebase.SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    /**\r\n     * @private\r\n     */\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParamaters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParamaters, function (error$$1, result) {\r\n            var data = result;\r\n            if (error$$1 === 404) {\r\n                data = null;\r\n                error$$1 = null;\r\n            }\r\n            if (error$$1 === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error$$1) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error$$1 == 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error$$1;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_\r\n     * @param {boolean} forceRestClient\r\n     * @param {!FirebaseApp} app\r\n     */\r\n    function Repo(repoInfo_, forceRestClient, app) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        // A list of data pieces and paths to be set when this client disconnects.\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        /**\r\n         * TODO: This should be @private but it's used by test_access.js and internal.js\r\n         * @type {?PersistentConnection}\r\n         */\r\n        this.persistentConnection_ = null;\r\n        /** @type {!AuthTokenProvider} */\r\n        var authTokenProvider = new AuthTokenProvider(app);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactions_init_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return {string}  The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return {!string} The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return {!number} The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     * @return {!Object}\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     *\r\n     * @private\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {boolean} isMerge\r\n     * @param {?number} tag\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) {\r\n                    return nodeFromJSON$1(raw);\r\n                });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) {\r\n                return nodeFromJSON$1(raw);\r\n            });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    /**\r\n     * TODO: This should be @private but it's used by test_access.js and internal.js\r\n     * @param {?function(!string, *):*} callback\r\n     * @private\r\n     */\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    /**\r\n     * @param {!boolean} connectStatus\r\n     * @private\r\n     */\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Object} updates\r\n     * @private\r\n     */\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (value, key) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {*} value\r\n     * @private\r\n     */\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    /**\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} newVal\r\n     * @param {number|string|null} newPriority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!Object} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        util.forEach(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            util.forEach(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     * @private\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} value\r\n     * @param {*} priority\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {*} childrenToMerge\r\n     * @param {?function(?Error, *=)} onComplete\r\n     */\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                util.forEach(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration\r\n     */\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined')\r\n            return;\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_)\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        util.forEach(stats, function (stat, value) {\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++)\r\n                stat += ' ';\r\n            console.log(stat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    /**\r\n     * @param {...*} var_args\r\n     * @private\r\n     */\r\n    Repo.prototype.log_ = function () {\r\n        var var_args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            var_args[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, [prefix].concat(var_args));\r\n    };\r\n    /**\r\n     * @param {?function(?Error, *=)} callback\r\n     * @param {!string} status\r\n     * @param {?string=} errorReason\r\n     */\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status == 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason)\r\n                        message += ': ' + errorReason;\r\n                    var error$$1 = new Error(message);\r\n                    error$$1.code = code;\r\n                    callback(error$$1);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() == this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name == childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (!(indexValue !== undefined)) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ == PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty())\r\n            return null;\r\n        else\r\n            return this.path.getBack();\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null)\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            else\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys')\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        if (applyLocally === undefined)\r\n            applyLocally = true;\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error$$1, committed, snapshot) {\r\n            if (error$$1) {\r\n                deferred.reject(error$$1);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error$$1, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next;\r\n        while ((next = path.getFront()) !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        util.forEach(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst)\r\n            action(this);\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst)\r\n            action(this);\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null)\r\n                action(child);\r\n            else\r\n                child.forEachImmediateDescendantWithValue(action);\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null)\r\n            this.parent_.updateChild_(this.name_, this);\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\nRepo.prototype.transactions_init_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /**@type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT)\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    else\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    while ((front = path.getFront()) !== null &&\r\n        transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                // Already marked.  No action needed.\r\n            }\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].interrupt();\r\n            }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        for (var appName in this.repos_) {\r\n            for (var dbUrl in this.repos_[appName]) {\r\n                this.repos_[appName][dbUrl].resume();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            return tslib_1.__generator(this, function (_a) {\r\n                this.database.checkDeleted_('delete');\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                this.database.repo_ = null;\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, opt_onComplete, opt_hash) {\r\n        if (opt_hash !== undefined) {\r\n            opt_hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, opt_onComplete, opt_hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * @param {!Query} firebaseRef\r\n * @return {!Object}\r\n */\r\nvar listens = function (firebaseRef) {\r\n    return firebaseRef.repo.persistentConnection_.listens_;\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  listens: listens,\n  forceRestClient: forceRestClient\n});\n\n/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerService('database', function (app, unused, url) { return RepoManager.getInstance().databaseFromApp(app, url); }, \r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    }, null, true);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.registerDatabase = registerDatabase;\nexports.Database = Database;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.enableLogging = enableLogging;\nexports.ServerValue = ServerValue;\nexports.DataSnapshot = DataSnapshot;\nexports.OnDisconnect = OnDisconnect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@firebase/database/dist/index.cjs.js\n// module id = jE0U\n// module chunks = 0","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/keys.js\n// module id = jFbC\n// module chunks = 0","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_export.js\n// module id = kM2E\n// module chunks = 0","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_a-function.js\n// module id = lOnJ\n// module chunks = 0","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-keys.js\n// module id = lktj\n// module chunks = 0","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-dps.js\n// module id = qio6\n// module chunks = 0","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_to-object.js\n// module id = sB3e\n// module chunks = 0","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = uqUo\n// module chunks = 0","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_array-includes.js\n// module id = vFc/\n// module chunks = 0","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_iter-define.js\n// module id = vIB/\n// module chunks = 0","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.iterator.js\n// module id = xGkn\n// module chunks = 0","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_enum-bug-keys.js\n// module id = xnc9\n// module chunks = 0","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.string.iterator.js\n// module id = zQR9\n// module chunks = 0"],"sourceRoot":""}